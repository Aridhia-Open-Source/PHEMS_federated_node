name: Build Docker Image
run-name: Building images
on:
  push:
    branches:
      - main
    paths-ignore:
      - '*.md'
      - 'README'
      - 'LICENSE'
      - 'DEPLOYMENT'
      - 'images/**'
      - 'Makefile'
      - '.gitignore'
      - 'sub-license/**'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '*.md'
      - 'README'
      - 'LICENSE'
      - 'DEPLOYMENT'
      - 'images/**'
      - 'Makefile'
      - '.gitignore'
      - 'sub-license/**'
env:
  TAG: ${{ vars.VERSION }}

jobs:
  linters:
    defaults:
      run:
        shell: bash
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check for vulnerabilities
        run: |
          docker run --entrypoint /bin/sh \
            -v ./webserver/app/Pipfile:/app/Pipfile \
            -v ./webserver/app/Pipfile.lock:/app/Pipfile.lock \
            -v ./webserver/vuln.sh:/vuln.sh \
            python:3.12 \
            /vuln.sh

      - name: Run pylint
        run: |
          make pylint

      - name: Run hadolint
        run: |
          make hadolint
  tests:
    needs: linters
    defaults:
      run:
        shell: bash
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run Python Tests
        working-directory: webserver
        run: |
          make tests_ci

      - uses: irongut/CodeCoverageSummary@v1.3.0
        name: Code Coverage Summary Report
        with:
          filename: artifacts/coverage.xml
          fail_below_min: true
          thresholds: '60 80'
  build:
    needs: tests
    defaults:
      run:
        shell: bash
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set Tag for dev branches
        if: github.ref != 'refs/heads/main'
        run: echo "TAG=${TAG}-${GITHUB_SHA::6}" >> ${GITHUB_ENV}

      # Need to get a registry where to push the image
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.DOCKER_CR }}
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >> ${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'
      - name: Build and push Flask image
        uses: docker/build-push-action@v5
        with:
          context: webserver
          file: webserver/build/Dockerfile
          tags: ${{ vars.DOCKER_CR }}/${{ env.OWNER_LC }}/federated_node_run:${{ env.TAG }}
          push: true
      - name: Build and push Keycloak image
        uses: docker/build-push-action@v5
        with:
          context: build/keycloak
          file: build/keycloak/keycloak.Dockerfile
          tags: ${{ vars.DOCKER_CR }}/${{ env.OWNER_LC }}/federated_keycloak:${{ env.TAG }}
          push: true
