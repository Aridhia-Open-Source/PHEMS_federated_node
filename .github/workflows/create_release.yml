name: Releases
run-name: Build and push helm chart
on:
  push:
    tags:
    - '*'
  workflow_run:
    workflows:
      Build Docker Image
    types:
      completed

env:
  HELM_CHANNEL: stable
  GH_TOKEN: ${{ secrets.SA_TOKEN }}

jobs:
  release:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.workflow_run.head_branch }}
        token: ${{ env.GH_TOKEN }}

    - name: Build helm archive
      working-directory: k8s/federated-node
      run: |
        helm package . -d ../../artifacts/ --app-version ${{ vars.VERSION }}

    - name: Set helm channel to develop for dev branches
      if: github.ref != 'refs/heads/main'
      run: echo "HELM_CHANNEL=develop" >> ${GITHUB_ENV}

    - name: Push to GitLab Package Artifact
      run: |
        echo "Setting version according to the Chart.yaml"
        version=$(grep 'version:.*' Chart.yaml | sed 's/^.*: //')
        echo "CHART_VERSION=${version}" >> ${GITHUB_ENV}
        echo "Chart version: ${version}"

        echo "Setting the appVersion on the Chart.yaml"
        sed -i "s/appVersion:.*/appVersion: \"${{ vars.VERSION }}\"/" Chart.yaml

        curl --request POST \
          --form 'chart=@artifacts/federated-node-${version}.tgz' \
          --user ${{ vars.USER_HELM }}:${{ secrets.HELM_TOKEN }} \
          ${{ vars.HELM_REPO }}/helm/api/${{ env.HELM_CHANNEL }}/charts

    - name: Publish Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "artifacts/federated-node-${{ env.CHART_VERSION }}.tgz"
        tag: ${{ env.CHART_VERSION }}
        skipIfReleaseExists: true
