name: Create Release
run-name: Create Release
on:
  workflow_dispatch:
  pull_request:
    branches:
      - create-release-pipeline

permissions:
  contents: write

jobs:
  tag:
    runs-on: ubuntu-latest
    outputs:
      current_version: ${{ steps.create_tag.outputs.CURRENT_VERSION }}
    steps:
      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.BUMP_APP_ID }}
          private-key: ${{ secrets.BUMP_APP_SECRET }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          token: ${{ steps.generate-token.outputs.token }}
      - name: Create Tag
        id: create_tag
        working-directory: k8s/federated-node
        run: |
          set -e
          version=$(grep '^version:.*' Chart.yaml | sed 's/^.*: //')
          echo "CURRENT_VERSION=$version" >> ${GITHUB_OUTPUT}
          # echo "Creating tag $version"
          # git tag "$version"
          # git push --tags
  setNewVersion:
    runs-on: ubuntu-latest
    needs:
      - tag
    steps:
      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.BUMP_APP_ID }}
          private-key: ${{ secrets.BUMP_APP_SECRET }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          token: ${{ steps.generate-token.outputs.token }}
      - name: New Version Bump
        id: newversion
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          set -e
          NEW_VERSION=$(python3 scripts/semver_bump.py -v ${{ needs.tag.outputs.current_version }} -n)

          echo "New Version: $NEW_VERSION"
          gh workflow run "Version bump" \
            -f chartVersion=$NEW_VERSION \
            -f appVersion=$NEW_VERSION \
            --ref ${{ github.ref }}

