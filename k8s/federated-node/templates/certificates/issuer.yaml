# Only rendered if SSL certificates are needed
{{- if (index .Values "cert-manager" "enabled" ) }}
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: ssl-issuer
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/hook: post-install, post-upgrade
spec:
  {{- if .Values.on_aks }}
  {{- with include "lookupOrError" (dict "entity" "ConfigMap" "namespace" .Release.Namespace "name" .Values.certs.azure.configmap) | fromYaml }}
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: {{ .data.EMAIL_CERT }}
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - dns01:
        azureDNS:
          clientID: {{ .data.SP_ID }}
          clientSecretSecretRef:
            name: {{ $.Values.certs.azure.secretName }}
            key: SP_SECRET
          environment: AzurePublicCloud
          resourceGroupName: {{ .data.RG_NAME }}
          subscriptionID: {{ .data.SUBSCRIPTION_ID }}
          hostedZoneName: {{ .data.HOSTED_ZONE }}
          tenantID: {{ .data.TENANT_ID }}
  {{ end }}
  {{- else if .Values.on_eks }}
  {{- with include "lookupOrError" (dict "entity" "Secret" "namespace" .Release.Namespace "name" .Values.certs.aws) | fromYaml }}
  acme:
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    email: {{ .data.EMAIL_CERT | b64dec }}
    privateKeySecretRef:
      name: letsencrypt-staging
    solvers:
    - dns01:
        route53:
          region: {{ .data.REGION | b64dec }}
          role: arn:aws:iam::{{ .data.ACCOUNT_ID | b64dec }}:role/{{ .data.ROLE_NAME | b64dec }}
          auth:
            kubernetes:
              serviceAccountRef:
                name: cert-manager-acme-dns01-route53
  {{- end }}
  {{- else if .Values.local_development }}
  selfSigned: {}
  {{- end }}
{{- end }}
