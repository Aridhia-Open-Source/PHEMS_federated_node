# Default values for federated-node.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/aridhia-open-source/federated_node_run
  tag: 0.0.1
  pullPolicy: IfNotPresent

keycloak:
  tag: 0.0.1

autoscaling:
  enabled: false

namespaces:
  keycloak: keycloak
  nginx: ingress-nginx
  tasks: tasks

# token:
#   life:

db:
  user:
  password:
  name:
  host:
  # If a configmap with host user exists, use that
  # configMap:
  # If a secret with password exists, use that
  # secret:
  #   name:
  #   key:

# How many days the results and k8s resources are kept for
cleanupTime: 3

federatedNode:
  port: 5000
  volumes:
    results_path: /mnt/results
    task_pod_results_path: /mnt/data

# Base to support multiple ACRs. This is for regcreds initially. Will be
# expanded to the flask docker lookup in a second instance
acrs:
  - url:
    secret:
      name:
      userKey:
      passKey:
    # password:
    # username:
    # email:

local_development: false

certs:
  # how often the certs should be renewed in days
  frequency: 60
  # In case of azure setup, set the Service Principal credentials
  # for the DNS service, so that the certificate can be auto-renew.
  # The credentials should be in a secret and its name should be set
  # in the sp_certificate field
  # azure:
    # sp_certificate:

  # AWS needs couple of env vars, and those should be replicated in the secret
  # AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY
  # aws:
    # sp_certificate:

storage:
  azure:
    # secretName:
    # storageAccountName:
    # storageAccountKey:
    # shareName:
  nfs:
    # provisioner:
    # url:
    # path:
  local:
    # Local storage that will be shared with the backend
    # path:
    # Local storage that will be shared with the db
    # dbpath: /data/db

token:
  life:

imagePullSecrets: regcred

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}

securityContext: {}

ingress:
  host:
  on_aks: false
  whitelist:
    enabled: false
    ips: []
  blacklist:
    enabled: false
    ips: []
  tls:
    keyFile:
    certFile:
    # secretName:

resources: {}

nodeSelector: {}

tolerations: []

affinity: {}
