apiVersion: rbac.authorization.k8s.io/v1
<<<<<<< HEAD
kind: ClusterRole
=======
kind: Role
>>>>>>> main
metadata:
  namespace: {{ .Release.Namespace }}
  name: backend-role
rules:
- apiGroups: [""]
  resources: ["secrets"]
<<<<<<< HEAD
  verbs: ["get", "list", "create"]
- apiGroups: ["", "batch"]
  resources: ["pods", "persistentvolumes", "persistentvolumeclaims", "jobs", "pods/exec"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: backend-rolebind
  namespace: {{ .Release.Namespace }}
=======
  verbs: ["get", "watch", "list", "create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: {{ .Release.Namespace }}
  name: task-role
>>>>>>> main
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "watch", "list", "create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: backend-role
  namespace: {{ .Release.Namespace }}
subjects:
  - kind: ServiceAccount
    name: secret-backend-handler
    namespace: {{ .Release.Namespace }}
roleRef:
<<<<<<< HEAD
  kind: ClusterRole
  name: backend-role
  apiGroup: rbac.authorization.k8s.io
---
=======
  kind: Role
  name: backend-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: task-role
  namespace: {{ .Release.Namespace }}
subjects:
  - kind: ServiceAccount
    name: task-pod-handler
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role
  name: task-role
  apiGroup: rbac.authorization.k8s.io
---
>>>>>>> main
apiVersion: v1
kind: ServiceAccount
metadata:
  name: secret-backend-handler
<<<<<<< HEAD
=======
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: task-pod-handler
>>>>>>> main
