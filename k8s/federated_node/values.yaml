# Default values for federated_node.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/aridhia/federated_node_run
  tag: 0.0.1
  pullPolicy: IfNotPresent

autoscaling:
  enabled: false

namespaces:
  keycloak: keycloak
  nginx: ingress-nginx
  tasks: tasks

db:
  user:
  password:
  name:
  host:
  # If a configmap with host user exists, use that
  configMap:
  # If a secret with password exists, use that
  secret:
    name:
    key:

federatedNode:
  port: 5000
  acr_url: ''
  acr_username: ''
  acr_password: ''
  acr_email: ''
  volumes:
    results_path: /mnt/results
    task_pod_results_path: /mnt/data

# Base to support multiple ACRs. This is for regcreds initially. Will be
# expanded to the flask docker lookup in a second instance
acrs:
  - url: other
    password: gageawgweag
    username: test2
    email: c
  - url: some
    password: asohasofihasohf
    username: user2
    email: c

storage:
  azure:
    # secretName:
    # storageAccountName:
    # storageAccountKey:
    # shareName:
  nfs:
    # provisioner:
    # url:
    # path:
  local:
    # path:

token:
  life:

imagePullSecrets:
  - name: regcred

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}

# ingress:
#   enabled: false
#   className: ""
#   annotations: {}
#     # kubernetes.io/ingress.class: nginx
#     # kubernetes.io/tls-acme: "true"
#   hosts:
#     - host: chart-example.local
#       paths:
#         - path: /
#           pathType: ImplementationSpecific
#   tls: []
#   #  - secretName: chart-example-tls
#   #    hosts:
#   #      - chart-example.local

resources: {}

nodeSelector: {}

tolerations: []

affinity: {}
